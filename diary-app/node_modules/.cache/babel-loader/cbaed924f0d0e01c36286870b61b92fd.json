{"ast":null,"code":"var _jsxFileName = \"/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/Stories.js\",\n    _s = $RefreshSig$();\n\nimport Controls from \"../components/UI/Controls\";\nimport StoryItems from \"../components/UI/StoryItems\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet FIRST_RENDER = true;\nconst ClASSES = [\"stories-entry1\", \"stories-entry-large\", \"stories-entry-small1\", \"stories-entry-small2\", \"stories-entry2\"];\n\nconst Stories = () => {\n  _s();\n\n  const navigator = useNavigate();\n  const location = useLocation();\n  const params = location.search ? location.search : \"\";\n  let timerId;\n  const token = useSelector(state => state.auth.token);\n  const [wordLimit, setWordLimit] = useState(0);\n  const [storiesState, setStoriesState] = useState([]);\n  const [urlFilter, setUrlFilter] = useState(\"\");\n  const [sorting, setSorting] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"Ascending\");\n  useEffect(() => {\n    const apiCall = async () => {\n      try {\n        let query;\n        console.log(\"in api call\");\n\n        if (params && !urlFilter) {\n          query = params;\n        } else {\n          console.log(\"when used \" + urlFilter);\n          query = urlFilter;\n        }\n\n        if (sorting) {\n          if (query.length === 0) {\n            query = `?sort=${sorting}`;\n          } else {\n            query = query + \"&sort=\" + sorting;\n          }\n        }\n\n        console.log(query);\n        const response = await fetch(`http://localhost:8080/api/entry/fetch${query}`, {\n          headers: {\n            \"Authorization\": `bearer ${token}`\n          }\n        });\n        const {\n          entries\n        } = await response.json();\n        setStoriesState(entries);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    if (FIRST_RENDER) {\n      FIRST_RENDER = false;\n      apiCall();\n    } else {\n      const timer = setTimeout(() => {\n        buildFilter(wordLimit);\n        console.log(` in timer ${urlFilter}`);\n        apiCall();\n      }, 2000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [wordLimit, sorting]);\n\n  const SortChangeHandler = e => {\n    console.log(e.target.value);\n    setSortOrder(e.target.value);\n\n    if (e.target.value === \"Ascending\") {\n      setSorting(\"updatedAt\");\n    } else if (e.target.value === \"Descending\") {\n      setSorting(\"-updatedAt\");\n    }\n  };\n\n  const rangeOnChangeHandler = e => {\n    setWordLimit(e.target.value);\n  };\n\n  const buildFilter = value => {\n    console.log(\" value is \" + value);\n    const filter = `?wordCount[gte]=${value}`;\n    setUrlFilter(filter);\n    navigator(filter);\n  };\n\n  const storyList = storiesState.map((story, index) => {\n    return /*#__PURE__*/_jsxDEV(StoryItems, {\n      classes: ClASSES[index],\n      title: story.title,\n      topic: story.topic,\n      entry: story.entry\n    }, story._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"stories-grid\",\n    children: [/*#__PURE__*/_jsxDEV(Controls, {\n      filterOrder: sortOrder,\n      wordLimit: wordLimit,\n      onSortChangeHandler: SortChangeHandler,\n      onChangeHandler: rangeOnChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 10\n    }, this), !storyList ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no entries by this user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 24\n    }, this) : storyList, /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"stories-pageCount\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Page count here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Stories, \"g/ZiLZ8OsoKqBeg07VOrr76tgLo=\", false, function () {\n  return [useNavigate, useLocation, useSelector];\n});\n\n_c = Stories;\nexport default Stories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stories\");","map":{"version":3,"sources":["/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/Stories.js"],"names":["Controls","StoryItems","useEffect","useState","useSelector","useNavigate","useLocation","FIRST_RENDER","ClASSES","Stories","navigator","location","params","search","timerId","token","state","auth","wordLimit","setWordLimit","storiesState","setStoriesState","urlFilter","setUrlFilter","sorting","setSorting","sortOrder","setSortOrder","apiCall","query","console","log","length","response","fetch","headers","entries","json","e","timer","setTimeout","buildFilter","clearTimeout","SortChangeHandler","target","value","rangeOnChangeHandler","filter","storyList","map","story","index","title","topic","entry","_id"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,2BAArB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAAQC,SAAR,EAAoBC,QAApB,QAAmC,OAAnC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,kBAAvC;;AACA,IAAIC,YAAY,GAAG,IAAnB;AACA,MAAMC,OAAO,GAAG,CAAC,gBAAD,EAAmB,qBAAnB,EAA0C,sBAA1C,EAAkE,sBAAlE,EAA0F,gBAA1F,CAAhB;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,SAAS,GAAGL,WAAW,EAA7B;AACA,QAAMM,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAGD,QAAQ,CAACE,MAAT,GAAkBF,QAAQ,CAACE,MAA3B,GAAoC,EAAnD;AACA,MAAIC,OAAJ;AACA,QAAMC,KAAK,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,KAArB,CAAzB;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,WAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,OAAO,GAAG,YAAY;AACxB,UAAG;AACC,YAAIC,KAAJ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,YAAInB,MAAM,IAAI,CAACU,SAAf,EAA0B;AACtBO,UAAAA,KAAK,GAAGjB,MAAR;AACD,SAFH,MAES;AACLkB,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAeT,SAA3B;AACAO,UAAAA,KAAK,GAAGP,SAAR;AACD;;AACD,YAAGE,OAAH,EAAY;AACR,cAAGK,KAAK,CAACG,MAAN,KAAiB,CAApB,EAAuB;AACrBH,YAAAA,KAAK,GAAI,SAAQL,OAAQ,EAAzB;AACD,WAFD,MAGI;AACAK,YAAAA,KAAK,GAAGA,KAAK,GAAG,QAAR,GAAmBL,OAA3B;AACH;AACJ;;AACDM,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACF,cAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,wCAAuCL,KAAM,EAA/C,EAAkD;AAC1EM,UAAAA,OAAO,EAAC;AACJ,6BAAkB,UAASpB,KAAM;AAD7B;AADkE,SAAlD,CAA5B;AAKA,cAAM;AAACqB,UAAAA;AAAD,YAAY,MAAMH,QAAQ,CAACI,IAAT,EAAxB;AACAhB,QAAAA,eAAe,CAACe,OAAD,CAAf;AACH,OAzBD,CA0BA,OAAME,CAAN,EAAS;AACLR,QAAAA,OAAO,CAACC,GAAR,CAAYO,CAAZ;AACH;AACJ,KA9BD;;AA+BI,QAAG/B,YAAH,EAAiB;AACbA,MAAAA,YAAY,GAAG,KAAf;AACAqB,MAAAA,OAAO;AACV,KAHD,MAII;AACA,YAAMW,KAAK,GAAIC,UAAU,CAAC,MAAM;AAC5BC,QAAAA,WAAW,CAACvB,SAAD,CAAX;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAa,aAAYT,SAAU,EAAnC;AACAM,QAAAA,OAAO;AACV,OAJwB,EAItB,IAJsB,CAAzB;AAOL,aAAO,MAAM;AACTc,QAAAA,YAAY,CAACH,KAAD,CAAZ;AACH,OAFD;AAGE;AAER,GAjDQ,EAiDN,CAACrB,SAAD,EAAYM,OAAZ,CAjDM,CAAT;;AAmDA,QAAMmB,iBAAiB,GAAIL,CAAD,IAAO;AAC7BR,IAAAA,OAAO,CAACC,GAAR,CAAYO,CAAC,CAACM,MAAF,CAASC,KAArB;AACAlB,IAAAA,YAAY,CAACW,CAAC,CAACM,MAAF,CAASC,KAAV,CAAZ;;AACA,QAAIP,CAAC,CAACM,MAAF,CAASC,KAAT,KAAmB,WAAvB,EAAoC;AAChCpB,MAAAA,UAAU,CAAC,WAAD,CAAV;AACD,KAFH,MAES,IAAIa,CAAC,CAACM,MAAF,CAASC,KAAT,KAAmB,YAAvB,EAAqC;AAC1CpB,MAAAA,UAAU,CAAC,YAAD,CAAV;AACD;AACN,GARD;;AASA,QAAMqB,oBAAoB,GAAKR,CAAD,IAAO;AACjCnB,IAAAA,YAAY,CAACmB,CAAC,CAACM,MAAF,CAASC,KAAV,CAAZ;AAEH,GAHD;;AAIA,QAAMJ,WAAW,GAAII,KAAD,IAAW;AAC3Bf,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAec,KAA3B;AACA,UAAME,MAAM,GAAI,mBAAkBF,KAAM,EAAxC;AACAtB,IAAAA,YAAY,CAACwB,MAAD,CAAZ;AACArC,IAAAA,SAAS,CAACqC,MAAD,CAAT;AACH,GALD;;AAOF,QAAMC,SAAS,GAAI5B,YAAY,CAAC6B,GAAb,CAAiB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACjD,wBAAO,QAAC,UAAD;AAAY,MAAA,OAAO,EAAE3C,OAAO,CAAC2C,KAAD,CAA5B;AAAqC,MAAA,KAAK,EAAED,KAAK,CAACE,KAAlD;AAAyD,MAAA,KAAK,EAAEF,KAAK,CAACG,KAAtE;AAA6E,MAAA,KAAK,EAAEH,KAAK,CAACI;AAA1F,OAAsGJ,KAAK,CAACK,GAA5G;AAAA;AAAA;AAAA;AAAA,YAAP;AACF,GAFgB,CAAnB;AAIE,sBACG;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAE7B,SAAvB;AAAkC,MAAA,SAAS,EAAER,SAA7C;AAAwD,MAAA,mBAAmB,EAAEyB,iBAA7E;AAAgG,MAAA,eAAe,EAAEG;AAAjH;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACE,SAAD,gBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb,GAAwDA,SAF3D,eAGE;AAAS,MAAA,SAAS,EAAC,mBAAnB;AAAA,6BAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAOH,CA9FD;;GAAMvC,O;UACgBJ,W,EACDC,W,EAGHF,W;;;KALZK,O;AAgGN,eAAeA,OAAf","sourcesContent":["import Controls from \"../components/UI/Controls\"\nimport StoryItems from \"../components/UI/StoryItems\"\nimport {useEffect , useState} from \"react\"\nimport {useSelector} from \"react-redux\"\nimport {useNavigate, useLocation} from \"react-router-dom\"\nlet FIRST_RENDER = true\nconst ClASSES = [\"stories-entry1\", \"stories-entry-large\", \"stories-entry-small1\", \"stories-entry-small2\", \"stories-entry2\" ]\nconst Stories = () => {\n    const navigator = useNavigate()\n    const location = useLocation()\n    const params = location.search ? location.search : \"\"\n    let timerId;\n    const token = useSelector(state => state.auth.token)\n    const [wordLimit, setWordLimit] = useState(0)\n    const [storiesState, setStoriesState] = useState([])\n    const [urlFilter, setUrlFilter] = useState(\"\")\n    const [sorting, setSorting] = useState(\"\")\n    const [sortOrder, setSortOrder] = useState(\"Ascending\")\n\n    useEffect(() => {\n        const apiCall = async () => {\n            try{\n                let query;\n                console.log(\"in api call\")\n                if (params && !urlFilter) {\n                    query = params;\n                  } else {\n                    console.log(\"when used \" + urlFilter)\n                    query = urlFilter;\n                  }\n                  if(sorting) {\n                      if(query.length === 0) {\n                        query = `?sort=${sorting}`\n                      }\n                      else{\n                          query = query + \"&sort=\" + sorting\n                      }\n                  }\n                  console.log(query)\n                const response = await fetch(`http://localhost:8080/api/entry/fetch${query}`, {\n                    headers:{\n                        \"Authorization\": `bearer ${token}`\n                    }\n                })\n                const {entries} = await response.json()\n                setStoriesState(entries)\n            }\n            catch(e) {\n                console.log(e)\n            }\n        }\n            if(FIRST_RENDER) {\n                FIRST_RENDER = false\n                apiCall()\n            }\n            else{\n                const timer =  setTimeout(() => {\n                    buildFilter(wordLimit)\n                    console.log(` in timer ${urlFilter}`)\n                    apiCall()\n                }, 2000)\n            \n       \n           return () => {\n               clearTimeout(timer)\n           }\n            }\n      \n    }, [wordLimit, sorting])\n  \n    const SortChangeHandler = (e) => {\n        console.log(e.target.value)\n        setSortOrder(e.target.value)\n        if (e.target.value === \"Ascending\") {\n            setSorting(\"updatedAt\");\n          } else if (e.target.value === \"Descending\") {\n            setSorting(\"-updatedAt\");\n          }\n    }\n    const rangeOnChangeHandler =  (e) => {\n        setWordLimit(e.target.value)\n    \n    }\n    const buildFilter = (value) => {\n        console.log(\" value is \" + value)\n        const filter = `?wordCount[gte]=${value}`\n        setUrlFilter(filter)\n        navigator(filter)\n    }\n\n  const storyList =  storiesState.map((story, index) => {\n       return <StoryItems classes={ClASSES[index]} title={story.title} topic={story.topic} entry={story.entry} key={story._id}/>\n    })\n\n    return (\n       <section className=\"stories-grid\">\n         <Controls filterOrder={sortOrder} wordLimit={wordLimit} onSortChangeHandler={SortChangeHandler} onChangeHandler={rangeOnChangeHandler}/>\n         {!storyList ? <p>There are no entries by this user</p> : storyList}\n         <section className=\"stories-pageCount\"><h1>Page count here</h1></section>\n       </section>\n    )\n}\n\nexport default Stories\n"]},"metadata":{},"sourceType":"module"}