{"ast":null,"code":"export const getEntries = () => async dispatch => {\n  const getData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/entry/fetch\");\n\n      if (!response) {\n        throw new Error(\"something went wrong\");\n      }\n\n      const data = await response.json();\n      return data.entries;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  try {\n    const entriesData = await getData();\n    dispatch({\n      type: \"LOAD_ITEMS\",\n      payload: entriesData\n    });\n  } catch (e) {\n    console.log(e); // add an error dispatch\n  }\n};\nexport const addEntry = (data, token) => async dispatch => {\n  const sendData = async () => {\n    console.log(data);\n\n    try {\n      const response = await fetch(\"http://localhost:8080/api/entry/create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `bearer ${token}`\n        },\n        body: JSON.stringify(data)\n      });\n\n      if (!response) {\n        throw new Error(\"something went wrong\");\n      }\n\n      const resData = await response.json();\n      console.log(response);\n      return resData;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  try {\n    const entry = await sendData();\n    dispatch({\n      type: \"ADD_ENTRY\",\n      payload: entry\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const deleteEntry = id => async dispatch => {\n  const sendData = async () => {\n    const response = await fetch(`http://localhost:8080/api/entry/delete/${id}`, {\n      method: \"DELETE\"\n    });\n    return response.json();\n  };\n\n  try {\n    await sendData();\n    dispatch({\n      type: \"DELETE_ENTRY\",\n      payload: id\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};","map":{"version":3,"sources":["/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/store/reducers/action.js"],"names":["getEntries","dispatch","getData","response","fetch","Error","data","json","entries","e","console","log","entriesData","type","payload","addEntry","token","sendData","method","headers","body","JSON","stringify","resData","entry","deleteEntry","id"],"mappings":"AAAC,OAAO,MAAMA,UAAU,GAAG,MAAQ,MAAOC,QAAP,IAAoB;AACjD,QAAMC,OAAO,GAAG,YAAY;AAC1B,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAD,CAA5B;;AACA,UAAG,CAACD,QAAJ,EAAa;AACT,cAAM,IAAIE,KAAJ,CAAU,sBAAV,CAAN;AACH;;AACD,YAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACA,aAAOD,IAAI,CAACE,OAAZ;AACH,KAPD,CAQA,OAAMC,CAAN,EAAQ;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACF,GAZD;;AAaF,MAAG;AACC,UAAMG,WAAW,GAAG,MAAMV,OAAO,EAAjC;AACAD,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAE,YAAP;AAAqBC,MAAAA,OAAO,EAAEF;AAA9B,KAAD,CAAR;AAEH,GAJD,CAKA,OAAMH,CAAN,EAAS;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EADK,CAEL;AACH;AAGJ,CAzBO;AA2BR,OAAO,MAAMM,QAAQ,GAAG,CAACT,IAAD,EAAOU,KAAP,KAAiB,MAAOf,QAAP,IAAoB;AACzD,QAAMgB,QAAQ,GAAG,YAAY;AACzBP,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACA,QAAG;AACC,YAAMH,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;AACnEc,QAAAA,MAAM,EAAE,MAD2D;AAEnEC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAkB,UAASH,KAAM;AAF5B,SAF0D;AAMnEI,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,IAAf;AAN6D,OAA3C,CAA5B;;AAQA,UAAG,CAACH,QAAJ,EAAa;AACT,cAAM,IAAIE,KAAJ,CAAU,sBAAV,CAAN;AACH;;AACD,YAAMkB,OAAO,GAAG,MAAMpB,QAAQ,CAACI,IAAT,EAAtB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA,aAAOoB,OAAP;AACH,KAfD,CAgBA,OAAMd,CAAN,EAAS;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AAEJ,GAtBD;;AAuBA,MAAG;AACC,UAAMe,KAAK,GAAG,MAAMP,QAAQ,EAA5B;AACAhB,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAC,WAAN;AAAmBC,MAAAA,OAAO,EAAEU;AAA5B,KAAD,CAAR;AACH,GAHD,CAIA,OAAMf,CAAN,EAAS;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,CA/BM;AAiCP,OAAO,MAAMgB,WAAW,GAAIC,EAAD,IAAQ,MAAOzB,QAAP,IAAoB;AACnD,QAAMgB,QAAQ,GAAG,YAAY;AACzB,UAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,0CAAyCsB,EAAG,EAA9C,EAAiD;AACzER,MAAAA,MAAM,EAAC;AADkE,KAAjD,CAA5B;AAGA,WAAOf,QAAQ,CAACI,IAAT,EAAP;AACH,GALD;;AAMA,MAAG;AACC,UAAMU,QAAQ,EAAd;AACAhB,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAC,cAAN;AAAsBC,MAAAA,OAAO,EAACY;AAA9B,KAAD,CAAR;AACH,GAHD,CAIA,OAAMjB,CAAN,EAAS;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,CAdM","sourcesContent":[" export const getEntries = () =>   async (dispatch) => {\n      const getData = async () => {\n        try{\n            const response = await fetch(\"http://localhost:8080/api/entry/fetch\");\n            if(!response){\n                throw new Error(\"something went wrong\")\n            } \n            const data = await response.json() \n            return data.entries\n        }\n        catch(e){\n            console.log(e)\n        }\n      }\n    try{\n        const entriesData = await getData()\n        dispatch({type: \"LOAD_ITEMS\", payload: entriesData})\n\n    }\n    catch(e) {\n        console.log(e)\n        // add an error dispatch\n    }\n    \n    \n}\n\nexport const addEntry = (data, token) => async (dispatch) => {\n    const sendData = async () => {\n        console.log(data)\n        try{\n            const response = await fetch(\"http://localhost:8080/api/entry/create\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `bearer ${token}`\n                },\n                body: JSON.stringify(data)\n            })\n            if(!response){\n                throw new Error(\"something went wrong\")\n            } \n            const resData = await response.json()\n            console.log(response);\n            return resData\n        }\n        catch(e) {\n            console.log(e)\n        }\n\n    }\n    try{\n        const entry = await sendData()\n        dispatch({type:\"ADD_ENTRY\", payload: entry})\n    }\n    catch(e) {\n        console.log(e)\n    }\n}\n\nexport const deleteEntry = (id) => async (dispatch) => {\n    const sendData = async () => {\n        const response = await fetch(`http://localhost:8080/api/entry/delete/${id}`, {\n            method:\"DELETE\"\n        })\n        return response.json()\n    }\n    try{\n        await sendData()\n        dispatch({type:\"DELETE_ENTRY\", payload:id})\n    }\n    catch(e) {\n        console.log(e)\n    }\n}"]},"metadata":{},"sourceType":"module"}