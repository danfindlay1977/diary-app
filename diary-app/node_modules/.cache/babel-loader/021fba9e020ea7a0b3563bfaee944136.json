{"ast":null,"code":"var _jsxFileName = \"/Users/danielfindlay/Desktop/save/full-projects/diary-app/diary-app/src/components/UI/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // rcfe\n\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchEntries } from \"../../store/actions/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar() {\n  _s();\n\n  const token = useSelector(state => state.auth.token);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const navigator = useNavigate();\n  const [searchState, setSearchState] = useState(\"\");\n\n  const onChangeHandler = e => {\n    setSearchState(e.target.value);\n  };\n\n  const onSubmitHandler = e => {\n    console.log(e.target.value);\n    e.preventDefault();\n    const pathname = location.pathname;\n    const queryStr = searchState.split(\" \").map((param, index) => {\n      if (index == 0) {\n        return `?search=${param}`;\n      }\n\n      return `+${param}`;\n    }).join(\"\");\n    console.log(pathname);\n\n    if (pathname !== \"/search\") {\n      navigator(`search${queryStr}`);\n    } else {\n      navigator(pathname + queryStr);\n    }\n\n    console.log(queryStr);\n    dispatch(searchEntries(queryStr, token));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: searchState,\n      onChange: onChangeHandler,\n      className: \"search-bar\",\n      type: \"text\",\n      placeholder: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"hpx7VcOPn/J5aiDlCIhuL4QN25M=\", false, function () {\n  return [useSelector, useDispatch, useLocation, useNavigate];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/danielfindlay/Desktop/save/full-projects/diary-app/diary-app/src/components/UI/SearchBar.js"],"names":["useState","useLocation","useNavigate","useDispatch","useSelector","searchEntries","SearchBar","token","state","auth","dispatch","location","navigator","searchState","setSearchState","onChangeHandler","e","target","value","onSubmitHandler","console","log","preventDefault","pathname","queryStr","split","map","param","index","join"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB,C,CAA+B;;AAC/B,SAAQC,WAAR,EAAsBC,WAAtB,QAAwC,kBAAxC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,aAAR,QAA4B,4BAA5B;;;AACA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAMC,KAAK,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,KAArB,CAAzB;AACA,QAAMG,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,SAAS,GAAGV,WAAW,EAA7B;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMe,eAAe,GAAIC,CAAD,IAAO;AAC3BF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFD;;AAGA,QAAMC,eAAe,GAAIH,CAAD,IAAO;AAC3BI,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACC,MAAF,CAASC,KAArB;AACAF,IAAAA,CAAC,CAACM,cAAF;AACA,UAAMC,QAAQ,GAAGZ,QAAQ,CAACY,QAA1B;AACA,UAAMC,QAAQ,GAAGX,WAAW,CAACY,KAAZ,CAAkB,GAAlB,EAAuBC,GAAvB,CAA2B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1D,UAAGA,KAAK,IAAI,CAAZ,EAAe;AACX,eAAQ,WAAUD,KAAM,EAAxB;AACH;;AACD,aAAQ,IAAGA,KAAM,EAAjB;AACH,KALgB,EAKdE,IALc,CAKT,EALS,CAAjB;AAMAT,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;;AACA,QAAGA,QAAQ,KAAK,SAAhB,EAA2B;AACvBX,MAAAA,SAAS,CAAE,SAAQY,QAAS,EAAnB,CAAT;AACH,KAFD,MAGI;AACAZ,MAAAA,SAAS,CAACW,QAAQ,GAAGC,QAAZ,CAAT;AACH;;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAd,IAAAA,QAAQ,CAACL,aAAa,CAACmB,QAAD,EAAWjB,KAAX,CAAd,CAAR;AACH,GAnBD;;AAoBA,sBACI;AAAM,IAAA,QAAQ,EAAEY,eAAhB;AAAA,4BACA;AAAO,MAAA,KAAK,EAAEN,WAAd;AAA2B,MAAA,QAAQ,EAAEE,eAArC;AAAsD,MAAA,SAAS,EAAC,YAAhE;AAA6E,MAAA,IAAI,EAAC,MAAlF;AAAyF,MAAA,WAAW,EAAC;AAArG;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAnCQT,S;UACSF,W,EACGD,W,EACAF,W,EACCC,W;;;KAJbI,S;AAqCT,eAAeA,SAAf","sourcesContent":["import {useState} from 'react' // rcfe\nimport {useLocation , useNavigate} from \"react-router-dom\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {searchEntries} from \"../../store/actions/action\"\nfunction SearchBar() {\n    const token = useSelector(state => state.auth.token) \n    const dispatch = useDispatch()\n    const location = useLocation()\n    const navigator = useNavigate()\n    const [searchState, setSearchState] = useState(\"\")\n    const onChangeHandler = (e) => {\n        setSearchState(e.target.value) \n    }\n    const onSubmitHandler = (e) => {\n        console.log(e.target.value)\n        e.preventDefault()\n        const pathname = location.pathname\n        const queryStr = searchState.split(\" \").map((param, index) => {\n            if(index == 0) {\n                return `?search=${param}`\n            }\n            return `+${param}`\n        }).join(\"\")\n        console.log(pathname)\n        if(pathname !== \"/search\") {\n            navigator(`search${queryStr}`)\n        }\n        else{\n            navigator(pathname + queryStr)\n        }\n        console.log(queryStr)\n        dispatch(searchEntries(queryStr, token))\n    }\n    return (\n        <form onSubmit={onSubmitHandler} >\n        <input value={searchState} onChange={onChangeHandler} className=\"search-bar\" type=\"text\" placeholder=\"search\"></input>\n        <button>Search</button>\n        </form>\n    )\n}\n\nexport default SearchBar\n"]},"metadata":{},"sourceType":"module"}