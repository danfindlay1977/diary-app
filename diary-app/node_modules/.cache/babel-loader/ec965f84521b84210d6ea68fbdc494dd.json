{"ast":null,"code":"var _jsxFileName = \"/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const checkNull = val => val.trim() !== \"\";\n\n  const {\n    value: emailValue,\n    hasError: emailError,\n    inputValueChangeHandler: emailChangeHandler,\n    inputValueBlurHandler: emailBlurHandler,\n    isValid: emailIsValid\n  } = useInput(checkNull);\n  const {\n    value: passwordValue,\n    hasError: passwordError,\n    inputValueChangeHandler: passwordChangeHandler,\n    inputValueBlurHandler: passwordBlurHandler,\n    isValid: passwordIsValid\n  } = useInput(checkNull);\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"input-form form-flex\",\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: emailValue,\n      onChange: emailChangeHandler,\n      onBlur: emailBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Email is not vaild\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: passwordValue,\n      onChange: passwordChangeHandler,\n      onBlur: passwordBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Password is not vaild\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"MDQ0X/RdJ3bBweeryr2npyb+lWM=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/Login.js"],"names":["useInput","Login","checkNull","val","trim","value","emailValue","hasError","emailError","inputValueChangeHandler","emailChangeHandler","inputValueBlurHandler","emailBlurHandler","isValid","emailIsValid","passwordValue","passwordError","passwordChangeHandler","passwordBlurHandler","passwordIsValid","submitHandler","e","preventDefault"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,SAAS,GAAGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,OAAe,EAAxC;;AACA,QAAM;AACFC,IAAAA,KAAK,EAAEC,UADL;AAEFC,IAAAA,QAAQ,EAAEC,UAFR;AAGFC,IAAAA,uBAAuB,EAAEC,kBAHvB;AAIFC,IAAAA,qBAAqB,EAAEC,gBAJrB;AAKFC,IAAAA,OAAO,EAAEC;AALP,MAOJd,QAAQ,CAACE,SAAD,CAPV;AAQA,QAAM;AACFG,IAAAA,KAAK,EAAEU,aADL;AAEFR,IAAAA,QAAQ,EAAES,aAFR;AAGFP,IAAAA,uBAAuB,EAAEQ,qBAHvB;AAIFN,IAAAA,qBAAqB,EAAEO,mBAJrB;AAKFL,IAAAA,OAAO,EAAEM;AALP,MAOJnB,QAAQ,CAACE,SAAD,CAPV;;AASA,QAAMkB,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACH,GAFD;;AAIA,sBACI;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAuC,IAAA,QAAQ,EAAEF,aAAjD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,EAAEd,UAA3B;AAAuC,MAAA,QAAQ,EAAEI,kBAAjD;AAAqE,MAAA,MAAM,EAAEE;AAA7E;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKJ,UAAU,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHnB,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,KAAK,EAAEO,aAA9B;AAA6C,MAAA,QAAQ,EAAEE,qBAAvD;AAA8E,MAAA,MAAM,EAAEC;AAAtF;AAAA;AAAA;AAAA;AAAA,YALJ,EAMKF,aAAa,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANtB,eAOI;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAlCD;;GAAMf,K;UASAD,Q,EAQAA,Q;;;KAjBAC,K;AAmCN,eAAeA,KAAf","sourcesContent":["import useInput from \"../hooks/use-http\"\nconst Login = () => {\n    const checkNull = val => val.trim() !== \"\"\n    const {\n        value: emailValue, \n        hasError: emailError,\n        inputValueChangeHandler: emailChangeHandler,\n        inputValueBlurHandler: emailBlurHandler,\n        isValid: emailIsValid\n    } \n    = useInput(checkNull)\n    const {\n        value: passwordValue, \n        hasError: passwordError,\n        inputValueChangeHandler: passwordChangeHandler,\n        inputValueBlurHandler: passwordBlurHandler,\n        isValid: passwordIsValid\n    } \n    = useInput(checkNull)\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n    }\n\n    return (\n        <form className=\"input-form form-flex\" onSubmit={submitHandler}>\n            <label>Email:</label>\n            <input type=\"email\" value={emailValue} onChange={emailChangeHandler} onBlur={emailBlurHandler}/>\n            {emailError && <p>Email is not vaild</p>}\n            <label>Password</label>\n            <input type=\"password\" value={passwordValue} onChange={passwordChangeHandler} onBlur={passwordBlurHandler}/>\n            {passwordError && <p>Password is not vaild</p>}\n            <button className=\"btn\">Log In</button>\n        </form>\n    )\n}\nexport default Login\n"]},"metadata":{},"sourceType":"module"}