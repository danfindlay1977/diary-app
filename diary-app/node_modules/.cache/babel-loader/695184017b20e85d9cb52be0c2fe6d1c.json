{"ast":null,"code":"var _jsxFileName = \"/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/components/UI/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // rcfe\n\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar() {\n  _s();\n\n  const location = useLocation();\n  const navigator = useNavigate();\n  const [searchState, setSearchState] = useState(\"\");\n\n  const onChangeHandler = e => {\n    setSearchState(e.target.value);\n    const pathname = location.pathname;\n    const params = e.target.value.split(\" \").map((param, index) => {\n      if (index == 0) {\n        return `?=${param}`;\n      }\n\n      return `&=${param}`;\n    }).join(\"\");\n    console.log(params);\n\n    if (!pathname === \"/search\") {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: searchState,\n    onChange: onChangeHandler,\n    className: \"search-bar\",\n    type: \"text\",\n    placeholder: \"search\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"s9TRLMLJx8TbIhuv7lUJbd3KVN0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/components/UI/SearchBar.js"],"names":["useState","useLocation","useNavigate","SearchBar","location","navigator","searchState","setSearchState","onChangeHandler","e","target","value","pathname","params","split","map","param","index","join","console","log"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB,C,CAA+B;;AAC/B,SAAQC,WAAR,EAAsBC,WAAtB,QAAwC,kBAAxC;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,SAAS,GAAGH,WAAW,EAA7B;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMQ,eAAe,GAAIC,CAAD,IAAO;AAC3BF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACA,UAAMC,QAAQ,GAAGR,QAAQ,CAACQ,QAA1B;AACA,UAAMC,MAAM,GAAGJ,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeG,KAAf,CAAqB,GAArB,EAA0BC,GAA1B,CAA8B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3D,UAAGA,KAAK,IAAI,CAAZ,EAAe;AACX,eAAQ,KAAID,KAAM,EAAlB;AACH;;AACD,aAAQ,KAAIA,KAAM,EAAlB;AACH,KALc,EAKZE,IALY,CAKP,EALO,CAAf;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;;AACA,QAAG,CAACD,QAAD,KAAc,SAAjB,EAA4B,CAE3B;AACJ,GAbD;;AAcA,sBACI;AAAO,IAAA,KAAK,EAAEN,WAAd;AAA2B,IAAA,QAAQ,EAAEE,eAArC;AAAsD,IAAA,SAAS,EAAC,YAAhE;AAA6E,IAAA,IAAI,EAAC,MAAlF;AAAyF,IAAA,WAAW,EAAC;AAArG;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GArBQL,S;UACYF,W,EACCC,W;;;KAFbC,S;AAuBT,eAAeA,SAAf","sourcesContent":["import {useState} from 'react' // rcfe\nimport {useLocation , useNavigate} from \"react-router-dom\"\n\nfunction SearchBar() {\n    const location = useLocation()\n    const navigator = useNavigate()\n    const [searchState, setSearchState] = useState(\"\")\n    const onChangeHandler = (e) => {\n        setSearchState(e.target.value) \n        const pathname = location.pathname\n        const params = e.target.value.split(\" \").map((param, index) => {\n            if(index == 0) {\n                return `?=${param}`\n            }\n            return `&=${param}`\n        }).join(\"\")\n        console.log(params)\n        if(!pathname === \"/search\") {\n\n        }\n    }\n    return (\n        <input value={searchState} onChange={onChangeHandler} className=\"search-bar\" type=\"text\" placeholder=\"search\"></input>\n    )\n}\n\nexport default SearchBar\n"]},"metadata":{},"sourceType":"module"}