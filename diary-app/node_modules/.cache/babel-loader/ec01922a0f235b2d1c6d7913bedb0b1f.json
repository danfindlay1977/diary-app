{"ast":null,"code":"var _jsxFileName = \"/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/UpdateEntry.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { updateEntry } from \"../store/actions/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateEntry = () => {\n  _s();\n\n  const navigator = useNavigate();\n  const distpatch = useDispatch();\n  const params = useParams();\n  const {\n    id\n  } = params;\n  const entry = useSelector(state => state.entries.find(data => data._id === id));\n  const token = useSelector(state => state.auth.token);\n  const titleRef = useRef(entry.title);\n  const topicRef = useRef(entry.topic);\n  const entryRef = useRef(entry.entry);\n  const updateRef = useRef(false);\n\n  const onHandleSave = () => {\n    console.log(`change is ${updateRef}`);\n    const data = {\n      title: titleRef.current.innerText,\n      topic: topicRef.current.innerText,\n      entry: entryRef.current.innerText\n    };\n    distpatch(updateEntry(data, token, id));\n    navigator(\"/\");\n  };\n\n  const onHandleCancel = () => {\n    const check = window.confirm(\"Do you want to leave your changes will not be saved\");\n\n    if (check) {\n      navigator(\"/\");\n    }\n  };\n\n  const onChangeHandler = () => updateRef.current = true;\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      ref: titleRef,\n      className: \"edit-text\",\n      contentEditable: \"true\",\n      children: entry.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      ref: topicRef,\n      className: \"edit-text\",\n      contentEditable: \"true\",\n      children: entry.topic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      ref: entryRef,\n      className: \"edit-text edit-entry\",\n      contentEditable: \"true\",\n      children: entry.entry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onHandleSave,\n      className: \"btn\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onHandleCancel,\n      className: \"btn\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateEntry, \"Tjb18lTFyvtff3XHcaEGcc9ak8c=\", false, function () {\n  return [useNavigate, useDispatch, useParams, useSelector, useSelector];\n});\n\n_c = UpdateEntry;\nexport default UpdateEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateEntry\");","map":{"version":3,"sources":["/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/UpdateEntry.js"],"names":["Fragment","useRef","useSelector","useDispatch","useParams","useNavigate","updateEntry","UpdateEntry","navigator","distpatch","params","id","entry","state","entries","find","data","_id","token","auth","titleRef","title","topicRef","topic","entryRef","updateRef","onHandleSave","console","log","current","innerText","onHandleCancel","check","window","confirm","onChangeHandler"],"mappings":"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","sourcesContent":["import {Fragment, useRef} from \"react\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {useParams, useNavigate} from \"react-router-dom\"\nimport {updateEntry} from \"../store/actions/action\"\nconst UpdateEntry = () => {\n    const navigator = useNavigate()\n    const distpatch = useDispatch()\n    const params = useParams()\n    const {id} = params\n    const entry = useSelector(state => state.entries.find(data => data._id === id))\n    const token = useSelector(state => state.auth.token)\n    const titleRef = useRef(entry.title)\n    const topicRef = useRef(entry.topic)\n    const entryRef = useRef(entry.entry)\n    const updateRef = useRef(false)\n   \n    const onHandleSave = () => {\n        console.log(`change is ${updateRef}`)\n        const data = {\n            title: titleRef.current.innerText,\n            topic: topicRef.current.innerText,\n            entry: entryRef.current.innerText\n\n        }\n        distpatch(updateEntry(data, token, id))\n        navigator(\"/\")\n    }\n    const onHandleCancel = () => {\n        const check = window.confirm(\"Do you want to leave your changes will not be saved\")\n        if(check) {\n            navigator(\"/\")\n        }\n    } \n    const onChangeHandler = () => updateRef.current = true\n     return (\n        <Fragment>\n            <label>Title</label>\n            <p ref={titleRef} className=\"edit-text\" contentEditable=\"true\">{entry.title}</p>\n            <label>Topic</label>\n            <p ref={topicRef} className=\"edit-text\" contentEditable=\"true\">{entry.topic}</p>\n            <label>Entry</label>\n            <p ref={entryRef} className=\"edit-text edit-entry\" contentEditable=\"true\">{entry.entry}</p>\n            <button onClick={onHandleSave} className=\"btn\">Save</button>\n            <button onClick={onHandleCancel} className=\"btn\">Cancel</button>\n        </Fragment>\n    ) \n}\nexport default UpdateEntry"]},"metadata":{},"sourceType":"module"}