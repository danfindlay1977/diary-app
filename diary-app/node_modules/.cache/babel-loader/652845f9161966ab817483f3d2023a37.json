{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\n\nconst useHttp = () => {\n  _s();\n\n  const [isError, setError] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setError(null);\n    setLoading(false);\n\n    try {\n      console.log(requestConfig.body);\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (error) {\n      setError(error.message || \"something went wrong\");\n    }\n\n    setLoading(false);\n  }, []);\n  return {\n    isError,\n    isLoading,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"dgaLMNGUwGufya9KFaxfwXmezpw=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/hooks/use-http.js"],"names":["useState","useCallback","useHttp","isError","setError","isLoading","setLoading","sendRequest","requestConfig","applyData","console","log","body","response","fetch","url","method","headers","JSON","stringify","ok","Error","data","json","error","message"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAI,MAAM;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBJ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,UAAZ,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMO,WAAW,GAAIN,WAAW,CAAC,OAAOO,aAAP,EAAsBC,SAAtB,KAAoC;AACjEL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,QAAG;AACCI,MAAAA,OAAO,CAACC,GAAR,CAAYH,aAAa,CAACI,IAA1B;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,aAAa,CAACO,GAAf,EAAoB;AAC5CC,QAAAA,MAAM,EAAER,aAAa,CAACQ,MAAd,GAAuBR,aAAa,CAACQ,MAArC,GAA8C,KADV;AAE5CC,QAAAA,OAAO,EAAET,aAAa,CAACS,OAAd,GAAwBT,aAAa,CAACS,OAAtC,GAAgD,EAFb;AAG5CL,QAAAA,IAAI,EAAEJ,aAAa,CAACI,IAAd,GAAqBM,IAAI,CAACC,SAAL,CAAeX,aAAa,CAACI,IAA7B,CAArB,GAA0D;AAHpB,OAApB,CAA5B;;AAKA,UAAG,CAACC,QAAQ,CAACO,EAAb,EAAiB;AACb,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;;AACD,YAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAnB;AACAd,MAAAA,SAAS,CAACa,IAAD,CAAT;AACH,KAZD,CAaA,OAAME,KAAN,EAAa;AACTpB,MAAAA,QAAQ,CAACoB,KAAK,CAACC,OAAN,IAAiB,sBAAlB,CAAR;AACH;;AACDnB,IAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,GArB+B,EAqB7B,EArB6B,CAAhC;AAsBI,SAAO;AACHH,IAAAA,OADG;AAEHE,IAAAA,SAFG;AAGHE,IAAAA;AAHG,GAAP;AAKH,CA9BD;;GAAML,O;;AA+BN,eAAeA,OAAf","sourcesContent":["import {useState, useCallback} from \"react\"\n\nconst useHttp =  () => {\nconst [isError, setError] = useState(null)\nconst [isLoading, setLoading] = useState(false)\nconst sendRequest =  useCallback(async (requestConfig, applyData) => {\n    setError(null)\n    setLoading(false)\n    try{\n        console.log(requestConfig.body)\n        const response = await fetch(requestConfig.url, {\n            method: requestConfig.method ? requestConfig.method : \"GET\",\n            headers: requestConfig.headers ? requestConfig.headers : {},\n            body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n        })\n        if(!response.ok) {\n            throw new Error(\"something went wrong\")\n        }\n        const data = await response.json()\n        applyData(data)\n    }\n    catch(error) {\n        setError(error.message || \"something went wrong\")\n    }\n    setLoading(false)\n\n}, [])\n    return {\n        isError,\n        isLoading,\n        sendRequest\n    }\n}\nexport default useHttp"]},"metadata":{},"sourceType":"module"}