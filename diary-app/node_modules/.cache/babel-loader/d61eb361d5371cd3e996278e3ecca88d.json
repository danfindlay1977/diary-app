{"ast":null,"code":"var _jsxFileName = \"/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/UpdateEntry.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { updateEntry } from \"../store/actions/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateEntry = () => {\n  _s();\n\n  const distpatch = useDispatch();\n  const params = useParams();\n  const {\n    id\n  } = params;\n  const entry = useSelector(state => state.entries.find(data => data._id === id));\n  const token = useSelector(state => state.auth.token);\n  const titleRef = useRef(entry.title);\n  const topicRef = useRef(entry.topic);\n  const entryRef = useRef(entry.entry);\n\n  const onHandleSave = () => {\n    const data = {\n      id,\n      title: titleRef.current,\n      topic: topicRef.current,\n      entry: entryRef.current\n    };\n    distpatch(updateEntry(data, token));\n  };\n\n  const onHandleCancel = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      ref: titleRef,\n      className: \"edit-text\",\n      contentEditable: \"true\",\n      children: entry.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      ref: topicRef,\n      className: \"edit-text\",\n      contentEditable: \"true\",\n      children: entry.topic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      ref: entryRef,\n      className: \"edit-text edit-entry\",\n      contentEditable: \"true\",\n      children: entry.entry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onHandleSave,\n      className: \"btn\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onHandleCancel,\n      className: \"btn\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateEntry, \"WhIfjO3IotAPrRUNX1INDPypbOo=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector];\n});\n\n_c = UpdateEntry;\nexport default UpdateEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateEntry\");","map":{"version":3,"sources":["/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/UpdateEntry.js"],"names":["Fragment","useRef","useSelector","useDispatch","useParams","updateEntry","UpdateEntry","distpatch","params","id","entry","state","entries","find","data","_id","token","auth","titleRef","title","topicRef","topic","entryRef","onHandleSave","current","onHandleCancel"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,MAAlB,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,WAAR,QAA0B,yBAA1B;;;AACA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,SAAS,GAAGJ,WAAW,EAA7B;AACA,QAAMK,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAACK,IAAAA;AAAD,MAAOD,MAAb;AACA,QAAME,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaN,EAAxC,CAAV,CAAzB;AACA,QAAMO,KAAK,GAAGd,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACM,IAAN,CAAWD,KAArB,CAAzB;AACA,QAAME,QAAQ,GAAGjB,MAAM,CAACS,KAAK,CAACS,KAAP,CAAvB;AACA,QAAMC,QAAQ,GAAGnB,MAAM,CAACS,KAAK,CAACW,KAAP,CAAvB;AACA,QAAMC,QAAQ,GAAGrB,MAAM,CAACS,KAAK,CAACA,KAAP,CAAvB;;AACA,QAAMa,YAAY,GAAG,MAAM;AACvB,UAAMT,IAAI,GAAG;AACTL,MAAAA,EADS;AAETU,MAAAA,KAAK,EAAED,QAAQ,CAACM,OAFP;AAGTH,MAAAA,KAAK,EAAED,QAAQ,CAACI,OAHP;AAITd,MAAAA,KAAK,EAAEY,QAAQ,CAACE;AAJP,KAAb;AAOAjB,IAAAA,SAAS,CAACF,WAAW,CAACS,IAAD,EAAOE,KAAP,CAAZ,CAAT;AACH,GATD;;AAUA,QAAMS,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAGC,sBACG,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,GAAG,EAAEP,QAAR;AAAkB,MAAA,SAAS,EAAC,WAA5B;AAAwC,MAAA,eAAe,EAAC,MAAxD;AAAA,gBAAgER,KAAK,CAACS;AAAtE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAG,MAAA,GAAG,EAAEC,QAAR;AAAkB,MAAA,SAAS,EAAC,WAA5B;AAAwC,MAAA,eAAe,EAAC,MAAxD;AAAA,gBAAgEV,KAAK,CAACW;AAAtE;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAG,MAAA,GAAG,EAAEC,QAAR;AAAkB,MAAA,SAAS,EAAC,sBAA5B;AAAmD,MAAA,eAAe,EAAC,MAAnE;AAAA,gBAA2EZ,KAAK,CAACA;AAAjF;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAQ,MAAA,OAAO,EAAEa,YAAjB;AAA+B,MAAA,SAAS,EAAC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAQ,MAAA,OAAO,EAAEE,cAAjB;AAAiC,MAAA,SAAS,EAAC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAYJ,CAlCD;;GAAMnB,W;UACgBH,W,EACHC,S,EAEDF,W,EACAA,W;;;KALZI,W;AAmCN,eAAeA,WAAf","sourcesContent":["import {Fragment, useRef} from \"react\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {useParams} from \"react-router-dom\"\nimport {updateEntry} from \"../store/actions/action\"\nconst UpdateEntry = () => {\n    const distpatch = useDispatch()\n    const params = useParams()\n    const {id} = params\n    const entry = useSelector(state => state.entries.find(data => data._id === id))\n    const token = useSelector(state => state.auth.token)\n    const titleRef = useRef(entry.title)\n    const topicRef = useRef(entry.topic)\n    const entryRef = useRef(entry.entry)\n    const onHandleSave = () => {\n        const data = {\n            id,\n            title: titleRef.current,\n            topic: topicRef.current,\n            entry: entryRef.current\n\n        }\n        distpatch(updateEntry(data, token))\n    }\n    const onHandleCancel = () => {\n\n    } \n     return (\n        <Fragment>\n            <label>Title</label>\n            <p ref={titleRef} className=\"edit-text\" contentEditable=\"true\">{entry.title}</p>\n            <label>Topic</label>\n            <p ref={topicRef} className=\"edit-text\" contentEditable=\"true\">{entry.topic}</p>\n            <label>Entry</label>\n            <p ref={entryRef} className=\"edit-text edit-entry\" contentEditable=\"true\">{entry.entry}</p>\n            <button onClick={onHandleSave} className=\"btn\">Save</button>\n            <button onClick={onHandleCancel} className=\"btn\">Cancel</button>\n        </Fragment>\n    ) \n}\nexport default UpdateEntry"]},"metadata":{},"sourceType":"module"}