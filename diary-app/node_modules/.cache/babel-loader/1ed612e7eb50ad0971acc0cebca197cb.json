{"ast":null,"code":"var _jsxFileName = \"/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/Stories.js\",\n    _s = $RefreshSig$();\n\nimport Controls from \"../components/UI/Controls\";\nimport StoryItems from \"../components/UI/StoryItems\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classes = [\"stories-entry1\", \"stories-entry-large\", \"stories-entry-small1\", \"stories-entry-small2\", \"stories-entry2\"];\n\nconst Stories = () => {\n  _s();\n\n  const navigator = useNavigate();\n  const location = useLocation();\n  const params = location.search ? location.search : \"\";\n  let timerId;\n  const token = useSelector(state => state.auth.token);\n  const [wordLimit, setWordLimit] = useState(0);\n  const [storiesState, setStoriesState] = useState([]);\n  const [urlFilter, setUrlFilter] = useState(\"\");\n  useEffect(() => {\n    console.log(\"in here\");\n\n    const apiCall = async () => {\n      try {\n        let query;\n\n        if (params && !urlFilter) {\n          query = params;\n        } else {\n          query = urlFilter;\n        }\n\n        const response = await fetch(`http://localhost:8080/api/entry/fetch${query}`, {\n          headers: {\n            \"Authorization\": `bearer ${token}`\n          }\n        });\n        const {\n          entries\n        } = await response.json();\n        setStoriesState(entries);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    const timer = setTimeout(() => {\n      buildFilter(wordLimit);\n      apiCall();\n    }, 5000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [wordLimit]);\n\n  const SortChangeHandler = () => {\n    // check if acssending or decsending\n    // update state and call api\n    console.log(\"sort change handler\");\n  };\n\n  const rangeOnChangeHandler = e => {\n    setWordLimit(e.target.value);\n  };\n\n  const buildFilter = value => {\n    const filter = `?[gte]=${value}`;\n    setUrlFilter(filter);\n    navigator(filter);\n  };\n\n  const storyList = storiesState.map((story, index) => {\n    return /*#__PURE__*/_jsxDEV(StoryItems, {\n      classes: classes[index],\n      title: story.title,\n      topic: story.topic,\n      entry: story.entry\n    }, story.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"stories-grid\",\n    children: [/*#__PURE__*/_jsxDEV(Controls, {\n      wordLimit: wordLimit,\n      onSortChangeHandler: SortChangeHandler,\n      onChangeHandler: rangeOnChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }, this), !storyList ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no entries by this user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 24\n    }, this) : storyList, /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"stories-pageCount\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Page count here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Stories, \"Gef3sH2srv6e6hiHS/MFboAIDYU=\", false, function () {\n  return [useNavigate, useLocation, useSelector];\n});\n\n_c = Stories;\nexport default Stories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stories\");","map":{"version":3,"sources":["/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/Stories.js"],"names":["Controls","StoryItems","useEffect","useState","useSelector","useNavigate","useLocation","classes","Stories","navigator","location","params","search","timerId","token","state","auth","wordLimit","setWordLimit","storiesState","setStoriesState","urlFilter","setUrlFilter","console","log","apiCall","query","response","fetch","headers","entries","json","e","timer","setTimeout","buildFilter","clearTimeout","SortChangeHandler","rangeOnChangeHandler","target","value","filter","storyList","map","story","index","title","topic","entry","id"],"mappings":"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","sourcesContent":["import Controls from \"../components/UI/Controls\"\nimport StoryItems from \"../components/UI/StoryItems\"\nimport {useEffect , useState} from \"react\"\nimport {useSelector} from \"react-redux\"\nimport {useNavigate, useLocation} from \"react-router-dom\"\nconst classes = [\"stories-entry1\", \"stories-entry-large\", \"stories-entry-small1\", \"stories-entry-small2\", \"stories-entry2\" ]\nconst Stories = () => {\n    const navigator = useNavigate()\n    const location = useLocation()\n    const params = location.search ? location.search : \"\"\n    let timerId;\n    const token = useSelector(state => state.auth.token)\n    const [wordLimit, setWordLimit] = useState(0)\n    const [storiesState, setStoriesState] = useState([])\n    const [urlFilter, setUrlFilter] = useState(\"\")\n\n    useEffect(() => {\n        console.log(\"in here\")\n        const apiCall = async () => {\n            try{\n                let query;\n                if (params && !urlFilter) {\n                    query = params;\n                  } else {\n                    query = urlFilter;\n                  }\n                const response = await fetch(`http://localhost:8080/api/entry/fetch${query}`, {\n                    headers:{\n                        \"Authorization\": `bearer ${token}`\n                    }\n                })\n                const {entries} = await response.json()\n                setStoriesState(entries)\n            }\n            catch(e) {\n                console.log(e)\n            }\n    \n        }\n       const timer =  setTimeout(() => {\n           buildFilter(wordLimit)\n           apiCall()\n       }, 5000)\n       return () => {\n           clearTimeout(timer)\n       }\n    }, [wordLimit])\n  \n    const SortChangeHandler = () => {\n        // check if acssending or decsending\n        // update state and call api\n        console.log(\"sort change handler\")\n    }\n    const rangeOnChangeHandler =  (e) => {\n        setWordLimit(e.target.value)\n    \n    }\n    const buildFilter = (value) => {\n        const filter = `?[gte]=${value}`\n        setUrlFilter(filter)\n        navigator(filter)\n    }\n\n  const storyList =  storiesState.map((story, index) => {\n       return <StoryItems classes={classes[index]} title={story.title} topic={story.topic} entry={story.entry} key={story.id}/>\n    })\n\n    return (\n       <section className=\"stories-grid\">\n         <Controls wordLimit={wordLimit} onSortChangeHandler={SortChangeHandler} onChangeHandler={rangeOnChangeHandler}/>\n         {!storyList ? <p>There are no entries by this user</p> : storyList}\n         <section className=\"stories-pageCount\"><h1>Page count here</h1></section>\n       </section>\n    )\n}\n\nexport default Stories\n"]},"metadata":{},"sourceType":"module"}