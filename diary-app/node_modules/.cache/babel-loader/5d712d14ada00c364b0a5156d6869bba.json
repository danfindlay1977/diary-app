{"ast":null,"code":"var _jsxFileName = \"/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/Signup.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport useHttp from \"../hooks/use-http\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const checkNull = val => val.trim() !== \"\";\n\n  const checkMatch = val => val.trim() !== passwordValue.trim();\n\n  const {\n    value: firstNameValue,\n    hasError: firstNameError,\n    inputValueChangeHandler: firstNameChangeHandler,\n    inputValueBlurHandler: firstNameBlurHandler,\n    isValid: firstNameIsValid\n  } = useInput(checkNull);\n  const {\n    value: lastNameValue,\n    hasError: lastNameError,\n    inputValueChangeHandler: lastNameChangeHandler,\n    inputValueBlurHandler: lastNameBlurHandler,\n    isValid: lastNameIsValid\n  } = useInput(checkNull);\n  const {\n    value: emailValue,\n    hasError: emailError,\n    inputValueChangeHandler: emailChangeHandler,\n    inputValueBlurHandler: emailBlurHandler,\n    isValid: emailIsValid,\n    isTouched: emailIsTouched\n  } = useInput(checkNull);\n  const {\n    value: passwordValue,\n    hasError: passwordError,\n    inputValueChangeHandler: passwordChangeHandler,\n    inputValueBlurHandler: passwordBlurHandler,\n    isValid: passwordIsValid\n  } = useInput(checkNull);\n  const {\n    value: rePasswordValue,\n    hasError: rePasswordError,\n    inputValueChangeHandler: rePasswordChangeHandler,\n    inputValueBlurHandler: rePasswordBlurHandler,\n    isValid: rePasswordIsValid\n  } = useInput(checkMatch);\n  const {\n    isLoading: loading,\n    isError: errorMsg,\n    sendRequest: sendData\n  } = useHttp();\n  const [emailCheckValue, setEmailCheck] = useState(null);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      sendData({\n        url: `http://localhost:8080/api/auth/checkEmail/${emailValue}`\n      }, data => {\n        setEmailCheck(data.emailUsed);\n      });\n    }, 5000);\n    return () => {\n      clearTimeout(timer);\n      setEmailCheck(false);\n    };\n  }, [emailValue, setEmailCheck]);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(\"/api/auth/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          firstName: firstNameValue,\n          lastName: lastNameValue,\n          email: emailValue,\n          password: passwordValue,\n          rePassword: rePasswordValue\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong\");\n      }\n\n      const data = await response.json();\n      dispatch({\n        type: \"LOGIN\",\n        payload: data.token\n      });\n      navigate(\"/\");\n    } catch (e) {\n      console.log(e);\n    }\n  }; // check form vaildatiy\n\n\n  let formValided = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid && passwordIsValid && rePasswordIsValid) {\n    formValided = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"input-form form-flex\",\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: firstNameValue,\n      onChange: firstNameChangeHandler,\n      onBlur: firstNameBlurHandler,\n      className: \"input-field-text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), firstNameError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"First name is incorrect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Last Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: lastNameValue,\n      onChange: lastNameChangeHandler,\n      onBlur: lastNameBlurHandler,\n      className: \"input-field-text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), lastNameError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Last name is incorrect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field-text\",\n      type: \"email\",\n      value: emailValue,\n      onChange: emailChangeHandler,\n      onBlur: emailBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Email is not vaild\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 22\n    }, this), !emailError && emailCheckValue && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Email has already been used \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 42\n    }, this), !emailError && !emailCheckValue && emailIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Email has not been used \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field-text\",\n      type: \"password\",\n      value: passwordValue,\n      onChange: passwordChangeHandler,\n      onBlur: passwordBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Password is not vaild\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Re enter password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field-text\",\n      type: \"password\",\n      value: rePasswordValue,\n      onChange: rePasswordChangeHandler,\n      onBlur: rePasswordBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), !rePasswordError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Password does not match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: \"false\",\n      className: \"btn\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"iqlmjEBG4U8EGjfJW99XJqCE7lA=\", false, function () {\n  return [useNavigate, useDispatch, useInput, useInput, useInput, useInput, useInput, useHttp];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/Signup.js"],"names":["useInput","useHttp","useEffect","useState","useDispatch","useNavigate","Signup","navigate","dispatch","checkNull","val","trim","checkMatch","passwordValue","value","firstNameValue","hasError","firstNameError","inputValueChangeHandler","firstNameChangeHandler","inputValueBlurHandler","firstNameBlurHandler","isValid","firstNameIsValid","lastNameValue","lastNameError","lastNameChangeHandler","lastNameBlurHandler","lastNameIsValid","emailValue","emailError","emailChangeHandler","emailBlurHandler","emailIsValid","isTouched","emailIsTouched","passwordError","passwordChangeHandler","passwordBlurHandler","passwordIsValid","rePasswordValue","rePasswordError","rePasswordChangeHandler","rePasswordBlurHandler","rePasswordIsValid","isLoading","loading","isError","errorMsg","sendRequest","sendData","emailCheckValue","setEmailCheck","timer","setTimeout","url","data","emailUsed","clearTimeout","submitHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","firstName","lastName","email","password","rePassword","ok","Error","json","type","payload","token","console","log","formValided"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\nimport useHttp from \"../hooks/use-http\";\nimport { useEffect, useState } from \"react\";\nimport {useDispatch} from \"react-redux\"\nimport {useNavigate} from \"react-router-dom\"\n\nconst Signup = () => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n  const checkNull = (val) => val.trim() !== \"\";\n  const checkMatch = (val) => val.trim() !== passwordValue.trim();\n  const {\n    value: firstNameValue,\n    hasError: firstNameError,\n    inputValueChangeHandler: firstNameChangeHandler,\n    inputValueBlurHandler: firstNameBlurHandler,\n    isValid: firstNameIsValid,\n  } = useInput(checkNull);\n\n  const {\n    value: lastNameValue,\n    hasError: lastNameError,\n    inputValueChangeHandler: lastNameChangeHandler,\n    inputValueBlurHandler: lastNameBlurHandler,\n    isValid: lastNameIsValid,\n  } = useInput(checkNull);\n\n  const {\n    value: emailValue,\n    hasError: emailError,\n    inputValueChangeHandler: emailChangeHandler,\n    inputValueBlurHandler: emailBlurHandler,\n    isValid: emailIsValid,\n    isTouched: emailIsTouched,\n  } = useInput(checkNull);\n  const {\n    value: passwordValue,\n    hasError: passwordError,\n    inputValueChangeHandler: passwordChangeHandler,\n    inputValueBlurHandler: passwordBlurHandler,\n    isValid: passwordIsValid,\n  } = useInput(checkNull);\n  const {\n    value: rePasswordValue,\n    hasError: rePasswordError,\n    inputValueChangeHandler: rePasswordChangeHandler,\n    inputValueBlurHandler: rePasswordBlurHandler,\n    isValid: rePasswordIsValid,\n  } = useInput(checkMatch);\n  const {\n    isLoading: loading,\n    isError: errorMsg,\n    sendRequest: sendData,\n  } = useHttp();\n  const [emailCheckValue, setEmailCheck] = useState(null);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      sendData(\n        { url: `http://localhost:8080/api/auth/checkEmail/${emailValue}` },\n        (data) => {\n         setEmailCheck(data.emailUsed);\n        }\n      );\n    }, 5000);\n    return () => {\n      clearTimeout(timer);\n      setEmailCheck(false);\n    };\n  }, [emailValue, setEmailCheck]);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"/api/auth/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          firstName: firstNameValue,\n          lastName: lastNameValue,\n          email: emailValue,\n          password: passwordValue,\n          rePassword: rePasswordValue,\n        }),\n      });\n      if (!response.ok) {\n        throw new Error(\"something went wrong\");\n      }\n      const data = await response.json();\n      dispatch({type: \"LOGIN\", payload: data.token})\n      navigate(\"/\")\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  // check form vaildatiy\n  let formValided = false\n  if(firstNameIsValid && lastNameIsValid && emailIsValid && passwordIsValid && rePasswordIsValid) {\n    formValided = true\n  }\n\n  return (\n    <form className=\"input-form form-flex\" onSubmit={submitHandler}>\n      <label>First Name</label>\n      <input\n        type=\"text\"\n        value={firstNameValue}\n        onChange={firstNameChangeHandler}\n        onBlur={firstNameBlurHandler}\n        className=\"input-field-text\"\n      />\n      {firstNameError && <p>First name is incorrect</p>}\n      <label>Last Name:</label>\n      <input\n        type=\"text\"\n        value={lastNameValue}\n        onChange={lastNameChangeHandler}\n        onBlur={lastNameBlurHandler}\n        className=\"input-field-text\"\n      />\n      {lastNameError && <p>Last name is incorrect</p>}\n      <label>Email:</label>\n      <input\n        className=\"input-field-text\"\n        type=\"email\"\n        value={emailValue}\n        onChange={emailChangeHandler}\n        onBlur={emailBlurHandler}\n      />\n      {emailError && <p>Email is not vaild</p>}\n      {!emailError && emailCheckValue && <p>Email has already been used </p>}\n      {!emailError && !emailCheckValue && emailIsTouched && (\n        <p>Email has not been used </p>\n      )}\n      <label>Password</label>\n      <input\n        className=\"input-field-text\"\n        type=\"password\"\n        value={passwordValue}\n        onChange={passwordChangeHandler}\n        onBlur={passwordBlurHandler}\n      />\n      {passwordError && <p>Password is not vaild</p>}\n      <label>Re enter password</label>\n      <input\n        className=\"input-field-text\"\n        type=\"password\"\n        value={rePasswordValue}\n        onChange={rePasswordChangeHandler}\n        onBlur={rePasswordBlurHandler}\n      />\n      {!rePasswordError && <p>Password does not match</p>}\n      <button disabled=\"false\" className=\"btn\">Sign Up</button>\n    </form>\n  );\n};\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}