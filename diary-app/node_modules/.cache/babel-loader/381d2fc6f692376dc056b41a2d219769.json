{"ast":null,"code":"var _jsxFileName = \"/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const checkNull = val => val.trim() !== \"\";\n\n  const {\n    value: emailValue,\n    hasError: emailError,\n    inputValueChangeHandler: emailChangeHandler,\n    inputValueBlurHandler: emailBlurHandler,\n    isValid: emailIsValid\n  } = useInput(checkNull);\n  const {\n    value: passwordValue,\n    hasError: passwordError,\n    inputValueChangeHandler: passwordChangeHandler,\n    inputValueBlurHandler: passwordBlurHandler,\n    isValid: passwordIsValid\n  } = useInput(checkNull);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(\"http://localhost:8080/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: emailValue,\n          password: passwordValue\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"input-form form-flex\",\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field-text\",\n      type: \"email\",\n      value: emailValue,\n      onChange: emailChangeHandler,\n      onBlur: emailBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Email is not vaild\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field-text\",\n      type: \"password\",\n      value: passwordValue,\n      onChange: passwordChangeHandler,\n      onBlur: passwordBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Password is not vaild\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"MDQ0X/RdJ3bBweeryr2npyb+lWM=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/danielfindlay/Desktop/full-projects/diary/diary-app/src/pages/Login.js"],"names":["useInput","Login","checkNull","val","trim","value","emailValue","hasError","emailError","inputValueChangeHandler","emailChangeHandler","inputValueBlurHandler","emailBlurHandler","isValid","emailIsValid","passwordValue","passwordError","passwordChangeHandler","passwordBlurHandler","passwordIsValid","submitHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","email","password","ok","Error","data","json","console","log"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,oBAArB;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,SAAS,GAAGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,OAAe,EAAxC;;AACA,QAAM;AACFC,IAAAA,KAAK,EAAEC,UADL;AAEFC,IAAAA,QAAQ,EAAEC,UAFR;AAGFC,IAAAA,uBAAuB,EAAEC,kBAHvB;AAIFC,IAAAA,qBAAqB,EAAEC,gBAJrB;AAKFC,IAAAA,OAAO,EAAEC;AALP,MAOJd,QAAQ,CAACE,SAAD,CAPV;AAQA,QAAM;AACFG,IAAAA,KAAK,EAAEU,aADL;AAEFR,IAAAA,QAAQ,EAAES,aAFR;AAGFP,IAAAA,uBAAuB,EAAEQ,qBAHvB;AAIFN,IAAAA,qBAAqB,EAAEO,mBAJrB;AAKFL,IAAAA,OAAO,EAAEM;AALP,MAOJnB,QAAQ,CAACE,SAAD,CAPV;;AASA,QAAMkB,aAAa,GAAG,MAAOC,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAyC;AACjEC,QAAAA,MAAM,EAAE,MADyD;AAEjEC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFwD;AAGjEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAExB,UADU;AAEjByB,UAAAA,QAAQ,EAAEhB;AAFO,SAAf;AAH2D,OAAzC,CAA5B;;AAQA,UAAG,CAACQ,QAAQ,CAACS,EAAb,EAAiB;AACb,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;;AACD,YAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,KAdD,CAeA,OAAMb,CAAN,EAAQ;AACJe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,CAAZ;AACH;AACJ,GApBD;;AAsBA,sBACI;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAuC,IAAA,QAAQ,EAAED,aAAjD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,IAAI,EAAC,OAAzC;AAAiD,MAAA,KAAK,EAAEd,UAAxD;AAAoE,MAAA,QAAQ,EAAEI,kBAA9E;AAAkG,MAAA,MAAM,EAAEE;AAA1G;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKJ,UAAU,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHnB,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAqC,MAAA,IAAI,EAAC,UAA1C;AAAqD,MAAA,KAAK,EAAEO,aAA5D;AAA2E,MAAA,QAAQ,EAAEE,qBAArF;AAA4G,MAAA,MAAM,EAAEC;AAApH;AAAA;AAAA;AAAA;AAAA,YALJ,EAMKF,aAAa,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANtB,eAOI;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CApDD;;GAAMf,K;UASAD,Q,EAQAA,Q;;;KAjBAC,K;AAqDN,eAAeA,KAAf","sourcesContent":["import useInput from \"../hooks/use-input\"\nconst Login = () => {\n    const checkNull = val => val.trim() !== \"\"\n    const {\n        value: emailValue, \n        hasError: emailError,\n        inputValueChangeHandler: emailChangeHandler,\n        inputValueBlurHandler: emailBlurHandler,\n        isValid: emailIsValid\n    } \n    = useInput(checkNull)\n    const {\n        value: passwordValue, \n        hasError: passwordError,\n        inputValueChangeHandler: passwordChangeHandler,\n        inputValueBlurHandler: passwordBlurHandler,\n        isValid: passwordIsValid\n    } \n    = useInput(checkNull)\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n        try{\n            const response = await fetch(\"http://localhost:8080/api/auth/login\", {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    email: emailValue,\n                    password: passwordValue,\n                })\n            })\n            if(!response.ok) {\n                throw new Error(\"something went wrong\")\n            }\n            const data = await response.json()\n            console.log(data)\n        }\n        catch(e){\n            console.log(e)\n        }\n    }\n\n    return (\n        <form className=\"input-form form-flex\" onSubmit={submitHandler}>\n            <label>Email:</label>\n            <input className=\"input-field-text\" type=\"email\" value={emailValue} onChange={emailChangeHandler} onBlur={emailBlurHandler}/>\n            {emailError && <p>Email is not vaild</p>}\n            <label>Password</label>\n            <input className=\"input-field-text\"  type=\"password\" value={passwordValue} onChange={passwordChangeHandler} onBlur={passwordBlurHandler}/>\n            {passwordError && <p>Password is not vaild</p>}\n            <button className=\"btn\">Log In</button>\n        </form>\n    )\n}\nexport default Login\n"]},"metadata":{},"sourceType":"module"}